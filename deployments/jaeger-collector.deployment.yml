---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jaeger-configuration
  namespace: monitoring
  labels:
    app: jaeger
    jaeger-infra: configuration
data:
  span-storage-type: elasticsearch
  collector: |
    es:
      server-urls: http://es.kube-monitor:9200
      index-prefix: jaeger-es
      num-replicas: 0
      num-shards: 1
    collector:
      zipkin:
        http-port: 9411
  query: |
    es:
      server-urls: http://es.kube-monitor:9200
      index-prefix: jaeger-es
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger-collector
  namespace: monitoring
  labels:
    app: jaeger
    jaeger-infra: collector-deployment
spec:
  selector:
    matchLabels:
      app: jaeger-collector
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: jaeger-collector
        jaeger-infra: collector-pod
    spec:
      containers:
        - image: jaegertracing/jaeger-collector:1.28 # 1.6.0
          name: jaeger-collector
          args: ["--config-file=/conf/collector.yaml"]
          ports:
            - containerPort: 14250
              protocol: TCP
            - containerPort: 14267
              protocol: TCP
            - containerPort: 14268
              protocol: TCP
            - containerPort: 14269
              protocol: TCP
            - containerPort: 9411
              protocol: TCP
          readinessProbe:
            httpGet:
              path: "/"
              port: 14269
          volumeMounts:
            - name: jaeger-configuration-volume
              mountPath: /conf
          env:
            - name: SPAN_STORAGE_TYPE
              valueFrom:
                configMapKeyRef:
                  name: jaeger-configuration
                  key: span-storage-type
          resources:
            requests:
              memory: 300M
              cpu: 250m
            limits:
              memory: 300M
              cpu: 250m
      volumes:
        - configMap:
            name: jaeger-configuration
            items:
              - key: collector
                path: collector.yaml
          name: jaeger-configuration-volume
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector
  namespace: monitoring
  labels:
    app: jaeger
    jaeger-infra: collector-service
spec:
  ports:
    - name: jaeger-collector-grpc
      port: 14250
      protocol: TCP
      targetPort: 14250
  selector:
    jaeger-infra: collector-pod
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger-query
  namespace: monitoring
  labels:
    app: jaeger
    jaeger-infra: query-deployment
spec:
  selector:
    matchLabels:
      app: jaeger-query
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: jaeger-query
        jaeger-infra: query-pod
    spec:
      containers:
        - image: jaegertracing/jaeger-query:1.28 # 1.6.0
          name: jaeger-query
          args: ["--config-file=/conf/query.yaml"]
          ports:
            - containerPort: 16686
              protocol: TCP
          readinessProbe:
            httpGet:
              path: "/"
              port: 16687
          volumeMounts:
            - name: jaeger-configuration-volume
              mountPath: /conf
          env:
            - name: SPAN_STORAGE_TYPE
              valueFrom:
                configMapKeyRef:
                  name: jaeger-configuration
                  key: span-storage-type
          resources:
            requests:
              memory: 100M
              cpu: 100m
            limits:
              memory: 100M
              cpu: 100m
      volumes:
        - configMap:
            name: jaeger-configuration
            items:
              - key: query
                path: query.yaml
          name: jaeger-configuration-volume
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-query
  namespace: monitoring
  labels:
    app: jaeger
    jaeger-infra: query-service
spec:
  ports:
    - name: jaeger-query
      port: 16686
      targetPort: 16686
      protocol: TCP
  selector:
    jaeger-infra: query-pod
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger-ui
  namespace: monitoring
  annotations:
#    nginx.ingress.kubernetes.io/rewrite-target: /
#    nginx.ingress.kubernetes.io/add-base-url: "true"
#    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
spec:
  rules:
    - host: jaeger-ui.local # your jaeger internal endpoint
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: jaeger-query
              port:
                number: 16686
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
  name: jaeger-collector-ingress
  namespace: monitoring
spec:
  rules:
    - host: jaeger-collector.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jaeger-collector
                port:
                  number: 80
